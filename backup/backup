#!/bin/bash

# Backup import files
# - Sync: synced via syncthing
# - org: synced via syncthing
# - backup/services:
#   - twitter.txt: updated via this script
#   - feedly.opml: updated manually
# - backup/Signal: Signal export, synced via syncthing
set -e

SERVICES=$HOME/backup/services
LAST_BACKUP_FILE=$HOME/backup/last_backup
SIGNAL=$HOME/backup/Signal
TWITTER=$SERVICES/twitter.txt

function twitter() {
    cd ~/backup
    if [[ ! -d venv ]]; then
        python3 -m venv venv
        . venv/bin/activate
        pip install python-twitter pyyaml
    else
        . venv/bin/activate
    fi

    python ${WD}/twitter_backup.py > $TWITTER
}

function _dup_mode() {
    # make sure glacier transition is higher than this period, or you will need to migrate manually
    # for recovery
    if [[ -f ${LAST_BACKUP_FILE} && $(stat -c %Y ${LAST_BACKUP_FILE}) -gt $(( $(date +%s) - 30 * 24 * 3600 )) ]]; then
	echo "incremental"
    else
	echo "full"
    fi
}

function dup() {
    cd $HOME

    mode=$1
    duplicity \
	--include $HOME/Sync \
	--include $HOME/org \
	--include $SERVICES \
	--exclude '**' \
	--file-prefix-archive "archive/" \
	$(_dup_mode) \
	$HOME \
	$URL_DUP

    if [[ ${mode} == "full" ]]; then
	touch ${LAST_BACKUP_FILE}
    fi
}

function dupsignal() {
    cd $HOME

    mode=$1
    if [[ ${mode} == "full" ]]; then
	duplicity \
	    --include $SIGNAL \
	    --exclude '**' \
	    --file-prefix-archive "archive/" \
	    full \
	    $HOME \
	    $URL_SIG
    fi
}

function dup_clean() {
    duplicity remove-older-than 2M --force $URL_DUP \
	      --file-prefix-archive "archive/"

    duplicity remove-older-than 2M --force $URL_SIG \
	      --file-prefix-archive "archive/"

}

URL_DUP="s3://s3.fr-par.scw.cloud/ced-backup/dup"
URL_SIG="s3://s3.fr-par.scw.cloud/ced-backup/signal"
WD=$(dirname $(readlink -f $0))
export $(cat ${WD}/secret)

if [[ $# == 1 && $1 == "check" ]]; then
    dup_check
    exit $?
fi

echo "export twitter"
#twitter
dup_mode=$(_dup_mode)
echo "duplicity"
dup $dup_mode
echo "duplicity signal"
dupsignal $dup_mode
echo "remove old backup"
dup_clean
